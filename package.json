{
  "name": "my-v0-project",
  "version": "0.1.0",
  "private": true,
  "type": "commonjs",
  "engines": {
    "node": ">=20.17.0",
    "pnpm": ">=9.0.0"
  },
  "scripts": {
    "build": "next build",
    "dev": "next dev",
    "server": "LIVE_SERVER_PORT=3001 tsx --env-file=.env.local server/live-server.ts",
    "dev:all": "concurrently --names \"next,ws\" --kill-others-on-fail \"pnpm dev\" \"pnpm server\"",
    "dev:clean": "rm -rf .next && next dev",
    "dev:all:clean": "concurrently --names \"next,ws\" --kill-others-on-fail \"pnpm dev:clean\" \"pnpm server\"",
    "dev:check": "node scripts/check-dev-processes.js",
    "dev:live": "concurrently \"pnpm dev\" \"pnpm dev:local-ws\"",
    "dev:local-ws": "LIVE_SERVER_PORT=3001 tsx --env-file=.env.local server/live-server.ts",
    "dev:safe": "pnpm dev:check && pnpm dev",
    "dev:shell": "./scripts/dev-safe.sh",
    "mcp:bridge": "pnpm dlx @agentdeskai/browser-tools-server@latest",
    "mcp:server": "pnpm dlx @agentdeskai/browser-tools-mcp@1.2.0",
    "mcp:supabase": "pnpm dlx @supabase/mcp-server-supabase --access-token $SUPABASE_SERVICE_ROLE_KEY",
    "mcp:postgrest": "pnpm dlx @supabase/mcp-server-postgrest --access-token $SUPABASE_SERVICE_ROLE_KEY",
    "mcp:dev": "concurrently --names \"bridge,mcp\" --kill-others-on-fail \"pnpm mcp:bridge\" \"pnpm mcp:server\"",
    "mcp:supabase:dev": "concurrently --names \"bridge,mcp,supabase\" --kill-others-on-fail \"pnpm mcp:bridge\" \"pnpm mcp:server\" \"pnpm mcp:supabase\"",
    "supabase-mcp-setup": "node scripts/supabase-mcp-setup.js",
    "fix-feature-flags": "node scripts/fix-feature-flags-mcp.js",
    "fix-feature-flags-direct": "node scripts/fix-feature-flags-direct.js",
    "fix-feature-flags-mcp": "node scripts/fix-feature-flags-mcp-direct.js",
    "fix-feature-flags-final": "node scripts/fix-feature-flags-final-direct.js",
    "fix-caching": "node scripts/fix-caching-mcp.js",
    "fix-caching-final": "node scripts/fix-caching-final-run.js",
    "supabase-official-fix": "node scripts/supabase-official-fix.js",
    "docker-cache-fix": "node scripts/docker-cache-fix.js",
    "final-clean-sql": "node scripts/final-clean-sql.js",
    "lint": "next lint --max-warnings=0",
    "lint:fix": "next lint --fix",
    "lint:strict": "ESLINT_USE_FLAT_CONFIG=false next lint --max-warnings=0 --quiet",
    "lint:css": "stylelint \"**/*.{css,scss}\"",
    "lint:css:fix": "stylelint \"**/*.{css,scss}\" --fix",
    "lint:all": "pnpm lint && pnpm lint:css",
    "lint:all:fix": "pnpm lint:fix && pnpm lint:css:fix",
    "lint:ci": "pnpm lint:strict",
    "pre-commit": "pnpm rules:check && pnpm lint:all && pnpm test:unit",
    "rules:check": "pnpm rules:validate && echo 'âœ… Rule compliance verified'",
    "rules:validate": "tsx scripts/validate-rules.js",
    "prepare": "husky",
    "start": "next start",
    "test": "jest",
    "test:unit": "jest",
    "test:unit:watch": "jest --watch",
    "test:unit:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:visual": "playwright test --grep 'visual'",
    "test:integration": "jest --testPathPattern=tests/integration",
    "test:integration:coverage": "jest --testPathPattern=tests/integration --coverage",
    "test:comprehensive": "node tests/run-tests.js all",
    "test:comprehensive:watch": "node tests/run-tests.js all --watch",
    "test:generate-report": "node tests/run-tests.js report",
    "test:audio": "tsx scripts/test-audio-improvements.ts",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:security": "jest --testPathPattern=security",
    "test:compliance": "jest --testPathPattern=compliance",
    "test:performance": "jest --testPathPattern=performance",
    "test:scalability": "jest --testPathPattern=scalability",
    "test:observability": "jest --testPathPattern=observability",
    "test:ci": "jest --testPathPattern=ci",
    "test:dr": "jest --testPathPattern=disaster-recovery",
    "test:network": "jest --testPathPattern=network",
    "test:cost": "jest --testPathPattern=cost",
    "test:api": "jest --testPathPattern=api",
    "test:all": "pnpm test:security && pnpm test:compliance && pnpm test:performance && pnpm test:scalability && pnpm test:observability && pnpm test:ci && pnpm test:dr && pnpm test:network && pnpm test:cost && pnpm test:api",
    "monitor-costs": "tsx scripts/monitor-gemini-usage.ts",
    "verify-deployment": "tsx scripts/verify-deployment.ts",
    "pre-deploy": "pnpm monitor-costs && pnpm test:all",
    "diagnose-production": "tsx scripts/diagnose-production-issues.ts",
    "fix-production": "tsx scripts/fix-production-issues.ts",
    "flags": "tsx scripts/print-flags.ts",
    "repo:health": "node -e \"console.log('--- Flags ---')\" && pnpm flags && node -e \"console.log('\\n--- Doc refs ---')\" && tsx scripts/validate-docs.ts",
    "verify:all": "pnpm rules:check && tsx scripts/validate-docs.ts --report docs/DOCS_REFERENCE_AUDIT.md || true && pnpm lint:all || true && jscpd --reporters console --min-lines 20 --min-tokens 100 --pattern \"**/*.{ts,tsx}\" --ignore \"**/node_modules/**,**/archive/**,**/live-audio*/**\" || true && madge --ts-config ./tsconfig.json --extensions ts,tsx --circular ./app ./components ./lib ./hooks && ts-prune -p tsconfig.build.json --ignore \"(\\.test\\.ts|\\.spec\\.ts)$|^tests/|^playwright-tests/\" || true && depcheck --ignores=\"next,react,react-dom,@types/*,tailwindcss,postcss,autoprefixer\" || true && pnpm build"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --max-warnings=0"
    ],
    "*.{css,scss}": [
      "stylelint --max-warnings=0"
    ]
  },
  "dependencies": {
    "@ai-sdk/react": "^2.0.8",
    "@ai-sdk/ui-utils": "^1.2.11",
    "@emotion/is-prop-valid": "latest",
    "@google/genai": "latest",
    "@google/generative-ai": "^0.24.1",
    "@hookform/resolvers": "^3.9.1",
    "@icons-pack/react-simple-icons": "^13.7.0",
    "@jest/globals": "latest",
    "@modelcontextprotocol/sdk": "latest",
    "@phosphor-icons/react": "^2.1.10",
    "@radix-ui/react-accordion": "latest",
    "@radix-ui/react-alert-dialog": "latest",
    "@radix-ui/react-aspect-ratio": "latest",
    "@radix-ui/react-avatar": "latest",
    "@radix-ui/react-checkbox": "latest",
    "@radix-ui/react-collapsible": "latest",
    "@radix-ui/react-context-menu": "latest",
    "@radix-ui/react-dialog": "latest",
    "@radix-ui/react-dropdown-menu": "latest",
    "@radix-ui/react-hover-card": "latest",
    "@radix-ui/react-label": "latest",
    "@radix-ui/react-menubar": "latest",
    "@radix-ui/react-navigation-menu": "latest",
    "@radix-ui/react-popover": "latest",
    "@radix-ui/react-progress": "latest",
    "@radix-ui/react-radio-group": "latest",
    "@radix-ui/react-scroll-area": "latest",
    "@radix-ui/react-select": "latest",
    "@radix-ui/react-separator": "latest",
    "@radix-ui/react-slider": "latest",
    "@radix-ui/react-slot": "latest",
    "@radix-ui/react-switch": "latest",
    "@radix-ui/react-tabs": "latest",
    "@radix-ui/react-toast": "latest",
    "@radix-ui/react-toggle": "latest",
    "@radix-ui/react-toggle-group": "latest",
    "@radix-ui/react-tooltip": "latest",
    "@radix-ui/react-use-controllable-state": "^1.2.2",
    "@react-email/render": "^1.2.0",
    "@react-three/drei": "^10.7.4",
    "@react-three/fiber": "^9.3.0",
    "@ricky0123/vad-web": "^0.0.24",
    "@supabase/auth-ui-react": "^0.4.7",
    "@supabase/auth-ui-shared": "^0.1.8",
    "@supabase/mcp-server-postgrest": "^0.1.0",
    "@supabase/mcp-server-supabase": "^0.5.1",
    "@supabase/supabase-js": "latest",
    "@tailwindcss/typography": "latest",
    "@tanstack/react-virtual": "^3.13.12",
    "@testing-library/dom": "latest",
    "@types/express": "latest",
    "@types/pdfkit": "^0.17.2",
    "@vercel/speed-insights": "^1.2.0",
    "ai": "latest",
    "animejs": "^4.1.3",
    "autoprefixer": "^10.4.20",
    "axe-core": "^4.10.3",
    "bufferutil": "^4.0.9",
    "child_process": "latest",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "latest",
    "crypto": "latest",
    "date-fns": "latest",
    "embla-carousel-react": "latest",
    "events": "latest",
    "form-data": "^4.0.4",
    "framer-motion": "latest",
    "fs": "latest",
    "harden-react-markdown": "^1.0.2",
    "i18next": "^25.3.2",
    "input-otp": "latest",
    "isomorphic-dompurify": "latest",
    "jose": "latest",
    "js-cookie": "^3.0.5",
    "katex": "^0.16.22",
    "lodash": "latest",
    "lucide-react": "^0.454.0",
    "mime": "^4.0.7",
    "next-i18next": "^15.4.2",
    "next-themes": "latest",
    "node-mocks-http": "latest",
    "node-notifier": "latest",
    "path": "latest",
    "pdf-lib": "^1.17.1",
    "pdfkit": "^0.17.1",
    "puppeteer": "latest",
    "react": "^19",
    "react-day-picker": "latest",
    "react-dom": "^19",
    "react-dropzone": "latest",
    "react-hook-form": "latest",
    "react-i18next": "^15.6.1",
    "react-markdown": "^10.1.0",
    "react-resizable-panels": "latest",
    "react-syntax-highlighter": "^15.6.3",
    "readline": "latest",
    "recharts": "latest",
    "rehype-katex": "^7.0.1",
    "rehype-raw": "^7.0.0",
    "remark-gfm": "^4.0.1",
    "remark-math": "^6.0.0",
    "resend": "latest",
    "sonner": "latest",
    "tailwind-merge": "^2.5.5",
    "tailwindcss-animate": "^1.0.7",
    "three": "^0.179.1",
    "url": "latest",
    "use-stick-to-bottom": "^1.1.1",
    "utf-8-validate": "^6.0.5",
    "uuid": "latest",
    "vaul": "latest",
    "ws": "latest",
    "youtube-transcript": "^1.2.1",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@playwright/test": "^1.54.2",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/js-cookie": "^3.0.6",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^22",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/supertest": "^2.0.0",
    "@types/three": "^0.179.0",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "concurrently": "^9.2.0",
    "critters": "^0.0.25",
    "depcheck": "^1.4.7",
    "dotenv": "^17.2.0",
    "eslint": "^8.57.1",
    "eslint-config-next": "^15.4.6",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-regexp": "^2.6.0",
    "eslint-plugin-tailwindcss": "^3.18.2",
    "glob": "^11.0.3",
    "husky": "^9.0.0",
    "jest": "^30.0.4",
    "jest-environment-jsdom": "^30.0.5",
    "jscpd": "^4.0.5",
    "jsonwebtoken": "^9.0.2",
    "knip": "^5.63.0",
    "lint-staged": "^15.2.0",
    "madge": "^8.0.0",
    "next": "15.4.4",
    "playwright": "^1.54.2",
    "postcss": "^8.5",
    "start-server-and-test": "^2.0.13",
    "stylelint": "^16.8.0",
    "stylelint-config-standard": "^36.0.0",
    "stylelint-declaration-use-variable": "^1.7.3",
    "supertest": "^6.3.0",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.4.0",
    "ts-node": "11.0.0-beta.1",
    "ts-prune": "^0.10.3",
    "tsx": "^4.20.3",
    "typescript": "^5",
    "vercel": "^44.5.5"
  }
}